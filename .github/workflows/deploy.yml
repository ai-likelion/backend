name: Deploy to Render
on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 환경 셋업
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: gradlew 권한 설정
        run: chmod +x ./gradlew

      - name: 프로젝트 빌드
        run: ./gradlew build
        
      - name: 도커 환경 셋업
        uses: docker/setup-buildx-action@v2

      - name: 도커 허브 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: 도커 이미지 업로드
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: thelightway/ai-teacher-back:latest
          
      - name: Render 배포 시작
        id: start-time
        run: echo "start_time=$(date -u +%s)" >> $GITHUB_OUTPUT

      - name: Render 배포 요청
        id: render-deploy
        run: |
          RESPONSE=$(curl -s "${{ secrets.RENDER_DEPLOY_HOOK_URL }}")
          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.deploy.id')
          echo "deploy_id=$DEPLOY_ID" >> $GITHUB_OUTPUT
        
      - name: Render 배포 상태 확인 (Deploy ID로 확인)
        run: |
          TOKEN="${{ secrets.RENDER_TOKEN }}"
          DEPLOY_ID="${{ steps.render-deploy.outputs.deploy_id }}"
          API_URL="https://api.render.com/v1/services/${{ secrets.RENDER_SVC_ID }}/deploys"

          for i in {1..60}; do
            RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" "$API_URL")
              
            STATUS=$(echo "$RESPONSE" | jq -r --arg DEPLOY_ID "$DEPLOY_ID" '
              .[] 
              | select(.deploy.id == $DEPLOY_ID) 
              | .deploy.status
            ')

            echo "현재 상태: $STATUS"

            if [ "$STATUS" == "live" ]; then
              echo "배포 완료"
              exit 0
            elif [[ "$STATUS" == "build_failed" || "$STATUS" == "update_failed" || "$STATUS" == "canceled" ]]; then
              echo "배포 실패 (status: $STATUS)"
              exit 1
            fi
            
            sleep 5
          done

          echo "시간 초과: 배포 상태 확인 실패"
          exit 1